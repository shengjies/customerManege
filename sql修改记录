#2019-05-22
ALTER TABLE `erpstock`.`tab_materiel_into_stock_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `price`;
ALTER TABLE `erpstock`.`tab_materiel_out_stock_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `price`;
ALTER TABLE `erpstock`.`tab_product_out_stock_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `price`;
ALTER TABLE `erpstock`.`tab_product_into_stock_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `price`;
ALTER TABLE `erpstock`.`tab_materiel_feed_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `out_number`;
ALTER TABLE `erpstock`.`tab_line_into_stock_details`
ADD COLUMN `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、作废)' AFTER `into_type`;
#2019-5-27
CREATE TABLE `erpstock`.`tab_stock_handle` (
  `id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '库存内部处理主键',
  `company_id` INT(11) NULL COMMENT '公司主键id',
  `handle_code` VARCHAR(60) NULL COMMENT '库存处理编号',
  `handle_type` CHAR(1) NULL COMMENT '处理类型(0、成品，1、物料，2、半成品)',
  `create_id` INT(11) NULL COMMENT '创建者id',
  `create_name` VARCHAR(45) NULL COMMENT '创建者姓名',
  `create_time` DATETIME NULL COMMENT '创建时间',
  `actual_time` DATETIME NULL COMMENT '实际处理时间',
  `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、已作废)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '库存内部处理主表';

ALTER TABLE `erpstock`.`tab_stock_handle`
ADD COLUMN `remark` TEXT NULL COMMENT '备注信息' AFTER `del_flag`;

CREATE TABLE `erpstock`.`tab_stock_handle_details` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `company_id` INT(11) NULL COMMENT '公司主键id',
  `handle_id` INT(11) NULL COMMENT '内部调整主键id',
  `handle_code` VARCHAR(45) NULL COMMENT '处理单号',
  `handle_type` CHAR(1) NULL COMMENT '处理类型(0、成品，1、物料，2、半成品)',
  `create_id` INT(11) NULL COMMENT '创建者',
  `create_name` VARCHAR(45) NULL COMMENT '创建者姓名',
  `create_time` DATETIME NULL COMMENT '创建时间',
  `actual_time` DATETIME NULL COMMENT '实际处理时间',
  `attr_id` INT(11) NULL COMMENT '产品/物料/半成品id',
  `attr_code` VARCHAR(45) NULL COMMENT '产品/物料/半成品编码',
  `attr_model` VARCHAR(45) NULL COMMENT '产品/物料/半成品型号\n',
  `attr_name` VARCHAR(45) NULL COMMENT '产品/物料/半成品名称',
  `handle_status` CHAR(1) NULL COMMENT '处理状态(0、不良=>良品 1、不良=>报废 2、良品=>不良 3、良品=>报废 4、报废品清库)',
  `handle_number` INT(11) NULL DEFAULT 0 COMMENT '处理数量',
  `del_flag` CHAR(1) NULL DEFAULT 0 COMMENT '作废状态(0、默认值未作废，1、已作废)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '内部调整明细表';



# 2019-05-29  未执行
INSERT INTO `devicemanage2`.`dev_page_layout` (`layout_type`, `layout_name`, `layout_status`, `create_date`, `layout_num`) VALUES ('4', '图纸看板', '1', now(), '0');

#2019-05-30
ALTER TABLE `devicemanage2`.`dev_product_list`
ADD INDEX `code_company` (`company_id` ASC, `product_code` ASC) VISIBLE;
;


#2019-06-03
ALTER TABLE `devicemanage2`.`dev_work_order`
ADD COLUMN `sign` INT NULL DEFAULT 1 AFTER `ecn_text`;




##############################子项目sql修改点###################################


#2019-06-13 创建文件体系表和初始化文件体系数据

CREATE TABLE `tab_iso` (
  `iso_id` int(11) NOT NULL AUTO_INCREMENT,
  `c_name` varchar(145) DEFAULT NULL COMMENT '中文名称',
  `e_name` varchar(145) DEFAULT NULL COMMENT '英文名称',
  `disk` varchar(245) DEFAULT NULL COMMENT '文件夹路径',
  `disk_path` varchar(245) DEFAULT NULL COMMENT '访问拼接地址',
  `path` varchar(245) DEFAULT NULL COMMENT '访问路径',
  `i_type` int(11) DEFAULT '0' COMMENT '文件类型，0、文件夹 1、文件',
  `file_size` VARCHAR(45) NULL DEFAULT '--' COMMENT '文件大小'
  `category` int(11) DEFAULT '0' COMMENT '类别 0、普通文件 1、SOP 2、ECN 3、DCN',
  `company_id` int(11) DEFAULT NULL COMMENT '公司id',
  `parent_id` int(11) DEFAULT '0' COMMENT '父类别id',
  `grparent_id` INT(11) NULL DEFAULT 0 COMMENT '祖父id',
  `c_id` int(11) DEFAULT '0' COMMENT '创建者id',
  `c_time` datetime DEFAULT NULL COMMENT '创建时间',
  `def_id` int(11) DEFAULT '1' COMMENT '是否可以删除 0、不能 1、可以',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COMMENT='文件管理';

INSERT INTO `octopus`.`tab_iso` (`c_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `def_id`) VALUES ('文件管理', '0', '0', '0', '0', '0', '0');

INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('一级文件', 'yjwj1', '0', '0', '0', '1', '0', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('二级文件', 'ejwj2', '0', '0', '0', '1', '0', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('三级文件', 'sjwj3', '0', '0', '0', '1', '0', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('四级文件', 'sjwj4', '0', '0', '0', '1', '0', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('共享文件', 'gxwj5', '0', '0', '0', '1', '0', '0', '0');

INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('作业指导书(SOP)', 'sop', '0', '1', '0', '4', '1', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('ECN', 'ecn', '0', '2', '0', '4', '1', '0', '0');
INSERT INTO `octopus`.`tab_iso` (`c_name`, `e_name`, `i_type`, `category`, `company_id`, `parent_id`, `grparent_id`, `c_id`, `def_id`) VALUES ('DCN', 'dcn', '0', '3', '0', '4', '1', '0', '0');

# 2019-06-13 修改tab_iso字段
ALTER TABLE `octopus`.`tab_iso`
CHANGE COLUMN `id` `iso_id` INT(11) NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `p_id` `parent_id` INT(11) NULL DEFAULT '0' COMMENT '父类别id' ;
ALTER TABLE `octopus`.`tab_iso`
ADD COLUMN `grparent_id` INT(11) NULL DEFAULT 0 COMMENT '祖父id' AFTER `parent_id`;
ALTER TABLE `octopus`.`tab_iso`
CHANGE COLUMN `path` `path` VARCHAR(245) NULL DEFAULT NULL COMMENT '访问路径' ;
ALTER TABLE `octopus`.`tab_iso`
ADD COLUMN `file_size` VARCHAR(45) NULL DEFAULT '--' COMMENT '文件大小' AFTER `i_type`;




#========2019-06-13 添加工位
CREATE TABLE `octopus`.`tab_workstation` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `company_id` INT NULL COMMENT '公司id',
  `line_id` INT NULL COMMENT '产线id',
  `w_name` VARCHAR(145) NULL COMMENT '工位名称',
  `sop_id` INT NULL DEFAULT 0 COMMENT '指导书页数id',
  `dev_id` INT NULL DEFAULT 0 COMMENT '计数器id',
  `dev_code` VARCHAR(45) NULL COMMENT '计数器编码',
  `c_id` INT NULL DEFAULT 0 COMMENT '看板硬件id',
  `c_code` VARCHAR(45) NULL COMMENT '看板硬件编码',
  `e_id` INT NULL DEFAULT 0 COMMENT 'ECM 扫描枪硬件id',
  `e_code` VARCHAR(45) NULL COMMENT 'EMC 扫码枪编码',
  `sign` INT NULL DEFAULT 0 COMMENT '计数器数据判断依据0、不是 1、是',
  `c_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8

#========2019-06-14
#添加硬件配置标识
ALTER TABLE `octopus`.`dev_list`
ADD COLUMN `sign` INT(1) NULL DEFAULT 0 AFTER `config_status`;


ALTER TABLE `octopus`.`dev_production_line`
ADD COLUMN `sop_id` INT NULL COMMENT '作业指导书编号' AFTER `param_config`,
ADD COLUMN `product_codes` VARCHAR(545) NULL COMMENT '产品编码' AFTER `sop_id`;

ALTER TABLE `octopus`.`dev_production_line`
CHANGE COLUMN `sop_id` `sop_id` INT(11) NULL DEFAULT 0 COMMENT '作业指导书编号' ;

#2019-06-15 zsj 添加SOP 产线 工位配置
#SOP 产线配置
CREATE TABLE `tab_sop_line` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `company_id` int(11) DEFAULT NULL COMMENT '公司id',
  `sop_id` int(11) DEFAULT NULL COMMENT '作业指定数id，文件夹',
  `line_id` int(11) DEFAULT NULL COMMENT '产线id',
  `pn_id` int(11) DEFAULT NULL COMMENT '产品id',
  `pn_code` varchar(145) DEFAULT NULL COMMENT '产品编码',
  `c_id` int(11) DEFAULT NULL COMMENT '修改者id',
  `c_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='作业指导书  产线 配置';

#SOP 产线 工位配置
CREATE TABLE `tab_sop_line_work` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `company_id` int(11) DEFAULT NULL COMMENT '公司id',
  `line_id` int(11) DEFAULT NULL COMMENT '产线id',
  `sop_id` int(11) DEFAULT NULL COMMENT '作业指导书id',
  `w_id` int(11) DEFAULT NULL COMMENT '工位id',
  `page_id` int(11) DEFAULT NULL COMMENT '作业指导书页id',
  `c_id` int(11) DEFAULT NULL COMMENT '修改者id',
  `c_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='产线工位配置指导书页';


# 产线添加工程责任人、品质责任人、机械工程师、测试员字段
# 2019-6-17
ALTER TABLE `octopus`.`dev_production_line`
ADD COLUMN `ed_user` INT NULL COMMENT '工程责任人' AFTER `product_codes`,
ADD COLUMN `ipqc_user` INT NULL COMMENT '品质管理员' AFTER `ed_user`,
ADD COLUMN `me_user` INT NULL COMMENT '机械工程师' AFTER `ipqc_user`,
ADD COLUMN `te_user` INT NULL COMMENT '测试员' AFTER `me_user`;

# 工单添加投入产量字段
# 2019-6-17
ALTER TABLE `octopus`.`dev_work_order`
ADD COLUMN `put_into_number` INT NULL COMMENT '投入产量' AFTER `sign`;


#=======2019-06-19 zsj 添加标记工单用时
ALTER TABLE `octopus`.`dev_work_order`
ADD COLUMN `sign_time` DATETIME NULL COMMENT '标记开始时间' AFTER `put_into_number`,
ADD COLUMN `sign_huor` FLOAT(10,1) NULL DEFAULT 0 AFTER `sign_time`;

# 添加仪器设备管理
# 2019-06-19
CREATE TABLE `octopus`.`tab_instrument_manage` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `company_id` INT NULL COMMENT '公司主键id',
  `im_code` VARCHAR(125) NULL COMMENT '仪器编号',
  `im_name` VARCHAR(45) NULL COMMENT '仪器名称',
  `im_model` VARCHAR(45) NULL COMMENT '仪器型号',
  `im_department` VARCHAR(45) NULL COMMENT '使用部门',
  `im_liable` INT NULL COMMENT '设备责任人',
  `im_status` CHAR(1) NULL DEFAULT 0 COMMENT '设备状态(0、停用，1、启用)',
  `im_check_number` VARCHAR(125) NULL COMMENT '校验证书号码',
  `im_check_period` VARCHAR(45) NULL COMMENT '校验有效期',
  `im_check_book` VARCHAR(45) NULL COMMENT '校验证书',
  `im_check_mechanism` VARCHAR(45) NULL COMMENT '校验机构',
  `im_supplier` VARCHAR(45) NULL COMMENT '供应商',
  `im_start_time` DATETIME NULL COMMENT '启用日期',
  `create_id` INT NULL COMMENT '创建者',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '仪器设备管理';

ALTER TABLE `devicemanage`.`sys_user`
ADD UNIQUE INDEX `login_name_uindex` (`login_name` ASC) VISIBLE;
;

# 添加库存锁定逻辑
# 2019-06-20
ALTER TABLE `octopus`.`tab_order_info`
ADD COLUMN `lock_number` INT NULL DEFAULT 0 COMMENT '锁定订单库存总数' AFTER `order_deliver_num`;
ALTER TABLE `octopus`.`tab_order_details`
ADD COLUMN `lock_number` INT NULL DEFAULT 0 COMMENT '订单明细锁定库存数量' AFTER `deliver_num`;
ALTER TABLE `octopus`.`tab_product_stock`
ADD COLUMN `lock_number` INT NULL DEFAULT 0 COMMENT '产品库存锁定数量' AFTER `good_number`;


# ======================================= MRP功能模块 ====================================
# 2019-06-24 zqm 服务器未执行sql

ALTER TABLE `octopus`.`tab_product_bom_details`
ADD COLUMN `place_number` TEXT NULL COMMENT '位号' AFTER `create_time`,
ADD COLUMN `unit` VARCHAR(45) NULL COMMENT '单位' AFTER `place_number`;

ALTER TABLE `octopus`.`tab_order_details`
ADD COLUMN `lock_mat_number` INT NULL COMMENT '锁定物料库存数量' AFTER `product_id`,
ADD COLUMN `mat_status` INT NULL COMMENT '物料满足状态(0、物料充足可生产，1、物料不足不可生产)' AFTER `lock_mat_number`;
ALTER TABLE `octopus`.`tab_order_details`
CHANGE COLUMN `lock_mat_number` `lock_mat_number` INT(11) NULL DEFAULT 0 COMMENT '锁定物料库存数量' ;

ALTER TABLE `octopus`.`tab_materiel_stock`
ADD COLUMN `lock_number` INT NULL DEFAULT 0 COMMENT '物料库存锁定数量' AFTER `temporary_number`;

CREATE TABLE `octopus`.`tab_bom_config` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '主键自增长id',
  `company_id` INT NULL COMMENT '公司id',
  `materiel_code` INT NOT NULL COMMENT '物料编码下标',
  `materiel_name` INT NOT NULL COMMENT '物料名称下标',
  `materiel_model` INT NOT NULL COMMENT '物料型号下标',
  `number` INT NOT NULL COMMENT '用量下标',
  `unit` INT NULL COMMENT '单位下标',
  `place_number` INT NULL COMMENT '位号下标',
  `remark` INT NULL COMMENT '备注下标',
  `create_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'BOM导入配置';

CREATE TABLE `octopus`.`tab_bom_change` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '主键自增长id',
  `company_id` INT NULL COMMENT '公司id',
  `p_id` INT NULL COMMENT '产品id',
  `old_version` INT NULL COMMENT '上一个版本',
  `new_version` INT NULL COMMENT '新版本',
  `c_time` DATETIME NULL COMMENT '创建时间',
  `c_id` INT NULL COMMENT '创建者',
  `sh_time` DATETIME NULL COMMENT '审核时间',
  `sh_id` INT NULL COMMENT '审核人',
  `sh_status` INT NULL DEFAULT 0 COMMENT '审核状态(0、未审核 1、已审核)',
  `change_text` TEXT NULL COMMENT '修改内容(每行用<br/>隔开)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'BOM更改记录';

CREATE TABLE `octopus`.`tab_mrp` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '主键自增长id',
  `company_id` INT NULL COMMENT '公司id',
  `m_code` VARCHAR(45) NULL COMMENT 'MRP编号',
  `materiel_code` VARCHAR(45) NULL COMMENT '物料编号',
  `materiel_name` VARCHAR(45) NULL COMMENT '物料名称',
  `materiel_model` VARCHAR(45) NULL COMMENT '物料型号',
  `materiel_id` INT NULL COMMENT '物料id',
  `supplier_id` INT NULL COMMENT '供应商id',
  `order_id` INT NULL COMMENT '订单id',
  `order_code` VARCHAR(125) NULL COMMENT '订单编号',
  `product_id` INT NULL COMMENT '产品id',
  `product_code` VARCHAR(45) NULL COMMENT '产品编号',
  `product_name` VARCHAR(45) NULL COMMENT '产品名称',
  `need_number` INT NULL DEFAULT 0 COMMENT '所需数量',
  `del_number` INT NULL DEFAULT 0 COMMENT '所差数量',
  `tiao_number` INT NULL DEFAULT 0 COMMENT '调整数量',
  `total_number` INT NULL DEFAULT 0 COMMENT '总数(所差数量+调整数量，不显示)',
  `m_status` INT NULL COMMENT '状态(0、需采购 1、采购中、2、采购完成 3、不采购)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'MRP记录表';

# 2019-06-25 zqm 服务器数据库未执行sql
ALTER TABLE `octopus`.`tab_order_details`
ADD COLUMN `tiao_number` INT NULL DEFAULT 0 COMMENT '调整数量' AFTER `mat_status`;
ALTER TABLE `octopus`.`tab_order_details`
ADD COLUMN `mrp_status` INT NULL DEFAULT 0 COMMENT '是否已经生成mrp记录(0、未生成，1、已生成)' AFTER `tiao_number`;
ALTER TABLE `octopus`.`tab_product_bom`
CHANGE COLUMN `bom_version` `bom_version` INT NOT NULL COMMENT 'bom版本号' ;

# 2019-06-26 zqm 服务器数据库未执行sql
ALTER TABLE `octopus`.`tab_mrp`
ADD COLUMN `lock_mat_number` INT NULL DEFAULT 0 COMMENT '锁定的物料库存数量' AFTER `m_status`;
ALTER TABLE `octopus`.`tab_mrp`
CHANGE COLUMN `id` `mrp_id` INT(11) NOT NULL AUTO_INCREMENT COMMENT '主键自增长id' ;

ALTER TABLE `octopus`.`tab_materiel_supplier`
ADD INDEX `m_s_index` (`supplier_id` ASC, `materiel_id` ASC) VISIBLE;

CREATE TABLE `octopus`.`tab_mrp_purchase` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'mrp采购单关联表id主键',
  `mrp_id` INT NULL COMMENT 'MRP表主键id',
  `pur_id` INT NULL COMMENT '采购单id',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'mrp采购单关联表';

ALTER TABLE `octopus`.`tab_mrp_purchase`
ADD COLUMN `pur_detail_id` INT NULL COMMENT '采购单详表id' AFTER `pur_id`,
CHANGE COLUMN `pur_id` `pur_id` INT(11) NULL DEFAULT NULL COMMENT '采购单主表id' ;

# 2019-06-27 zqm 服务器数据库未执行sql
ALTER TABLE `octopus`.`tab_mrp_purchase`
ADD COLUMN `del_number` INT NULL DEFAULT 0 COMMENT '对应mrp还差的数量' AFTER `pur_detail_id`,
ADD COLUMN `tiao_number` INT NULL DEFAULT 0 COMMENT '对应mrp生成采购单调整的数量' AFTER `del_number`,
ADD COLUMN `lock_mat_number` INT NULL DEFAULT 0 COMMENT '对应mrp锁定的物料库存数量' AFTER `tiao_number`;
ALTER TABLE `octopus`.`tab_mrp_purchase`
ADD COLUMN `total_number` INT NULL DEFAULT 0 COMMENT '对应mrp差的总数量(所差数量+调整数量)' AFTER `tiao_number`;
ALTER TABLE `octopus`.`tab_mrp_purchase`
ADD COLUMN `init_lock_mat_number` INT NULL DEFAULT 0 COMMENT 'mrp初始化时锁定库存数量' AFTER `lock_mat_number`;

# 2019-06-28 zqm 服务器数据库未执行sql
# 新增库存出入库MRP操作关联表
CREATE TABLE `octopus`.`tab_erp_relation` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '库存出入库MRP操作关联主键id',
  `mp_id` INT NULL COMMENT 'MRP采购单关联主键id',
  `mat_detail_id` INT NULL COMMENT '物料出入库明细主键id',
  `pro_detail_id` INT NULL COMMENT '产品出入库明细主键id',
  `re_status` INT NULL COMMENT '类型(0、物料入库，1、物料退货，2、产品出库，3、客户退货)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '库存出入库MRP操作关联表';
ALTER TABLE `octopus`.`tab_erp_relation`
ADD COLUMN `line_detail_id` INT NULL COMMENT '生产出入明细主键id' AFTER `pro_detail_id`,
ADD COLUMN `line_type` INT NULL COMMENT '生产出入库的类型(0、物料，1、半成品，2、成品)' AFTER `line_detail_id`;



#2019-06-28 zsj 服务器未执行sql

#标记工单是否作废
ALTER TABLE `octopus`.`dev_work_order`
ADD COLUMN `abolish` TINYINT(1) NULL DEFAULT 0 COMMENT '标记工单是否作废' AFTER `sign_huor`;


#2019-06-29 zsj 服务器未执行sql
#添加工单变更状态
ALTER TABLE `octopus`.`dev_work_order_change`
ADD COLUMN `c_status` INT NULL DEFAULT 0 AFTER `remark`;

# 设备管理新增设备了类型表单
# 2019-07-02 zqm 服务器未执行sql
CREATE TABLE `octopus`.`tab_instrument_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '设备类型主键id',
  `company_id` INT NULL COMMENT '公司id',
  `in_type` VARCHAR(45) NULL COMMENT '设备类型名称',
  `create_time` DATETIME NULL COMMENT '创建时间',
  `create_id` INT NULL COMMENT '创建者',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '设备类型';

ALTER TABLE `octopus`.`tab_instrument_manage`
ADD COLUMN `in_type` INT NULL COMMENT '仪器设备的类型' AFTER `im_model`;

# 新增单工位数据库表
# 2019-07-03 zqm 服务器未执行sql
CREATE TABLE `octopus`.`tab_single_work` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '单工位主键id',
  `company_id` INT NULL COMMENT '公司主键id',
  `workshop_name` VARCHAR(45) NULL COMMENT '车间名称',
  `im_id` INT NULL COMMENT '设备主键id',
  `sign` INT NULL DEFAULT 1 COMMENT '标记(0、车间 1、设备)',
  `liable_one` INT NULL COMMENT '责任人1(如果是车间则是责任人，是设备则是员工)',
  `liable_two` INT NULL,
  `dev_id` INT NULL DEFAULT 0 COMMENT '硬件id(默认是0、未配置)',
  `dev_code` VARCHAR(45) NULL COMMENT '硬件编号',
  `c_time` DATETIME NULL,
  `parent_id` INT NULL DEFAULT 0 COMMENT '上一级id(父id)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '单工位数据表';

# 工单数据表新增字段，服务器未执行sql
ALTER TABLE `octopus`.`dev_work_order`
ADD COLUMN `wl_sign` INT NULL DEFAULT 0 COMMENT '工位是在车间还是在单工位生产标记(0、流水线默认值，1、单工位)' AFTER `abolish`,
ADD COLUMN `make_type` INT NULL DEFAULT 0 COMMENT '工单生产类型(0、默认值生产的是成品，1、生产半成品)' AFTER `wl_sign`,
ADD COLUMN `work_price` FLOAT(10,2) NULL DEFAULT 0.00 COMMENT '工单生产单价' AFTER `make_type`;

# 新增工单单工位关联表，服务器未执行sql
CREATE TABLE `octopus`.`tab_nect_work_single` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '工单单工位关联表主键id',
  `work_id` INT NULL COMMENT '工单id',
  `sw_id` INT NULL COMMENT '单工位主键id',
  `c_time` DATETIME NULL COMMENT '配置时间',
  PRIMARY KEY (`id`))
COMMENT = '工单单工位关联表';

# 新增设备标记状态
ALTER TABLE `octopus`.`tab_instrument_manage`
ADD COLUMN `im_tag` INT NULL DEFAULT 0 COMMENT '设备标记状态(0、未配置过，1、配置过了)' AFTER `create_time`;

# 2019-07-04 zqm 服务器未执行sql
# 新增我的计件数据表
CREATE TABLE `octopus`.`tab_count_piece` (
  `cp_id` INT NOT NULL AUTO_INCREMENT COMMENT '计件管理主键id',
  `cp_user_id` INT NULL COMMENT '计件记录归属人',
  `cp_date` DATE NULL COMMENT '计件日期',
  `work_id` INT NULL COMMENT '工单id',
  `work_number` VARCHAR(45) NULL COMMENT '工单号',
  `work_price` FLOAT(10,2) NULL DEFAULT 0.00 COMMENT '工价',
  `cp_number` INT NULL DEFAULT 0 COMMENT '计件数量',
  `total_price` FLOAT(10,2) NULL DEFAULT 0.00 COMMENT '总价((计件数量-不良品数量)*工价)',
  `cp_bad_number` INT NULL DEFAULT 0 COMMENT '不良品',
  `cp_remark` TEXT NULL COMMENT '备注',
  `cp_last_update` DATETIME NULL COMMENT '最后修改时间',
  `cp_last_id` INT NULL COMMENT '最后修改人',
  PRIMARY KEY (`cp_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '计件管理数据表';
ALTER TABLE `octopus`.`tab_count_piece`
ADD COLUMN `company_id` INT NULL COMMENT '公司id' AFTER `cp_id`;

# 2019-07-05 zqm 服务器未执行sql
# 单工位新增看板扫码枪硬件字段
ALTER TABLE `octopus`.`tab_single_work`
ADD COLUMN `watch_id` INT NULL DEFAULT 0 COMMENT '看板硬件id' AFTER `dev_code`,
ADD COLUMN `watch_code` VARCHAR(45) NULL COMMENT '看板硬件编码' AFTER `watch_id`,
ADD COLUMN `e_id` INT NULL DEFAULT 0 COMMENT '扫码枪硬件id' AFTER `watch_code`,
ADD COLUMN `e_code` VARCHAR(45) NULL COMMENT '扫码枪硬件编码' AFTER `e_id`,
CHANGE COLUMN `dev_id` `dev_id` INT(11) NULL DEFAULT '0' COMMENT '计数器id(默认是0、未配置)' ,
CHANGE COLUMN `dev_code` `dev_code` VARCHAR(45) NULL DEFAULT NULL COMMENT '计数器硬件编号' ;

# 单工位配置SOP
ALTER TABLE `octopus`.`tab_sop_line`
ADD COLUMN `sop_tag` INT NULL DEFAULT 0 COMMENT 'sop配置标记(默认0、流水线，1、单工位)' AFTER `c_time`,
CHANGE COLUMN `line_id` `line_id` INT(11) NULL DEFAULT NULL COMMENT '产线id/单工位id' ;

ALTER TABLE `octopus`.`tab_sop_line_work`
ADD COLUMN `sop_tag` INT NULL DEFAULT 0 COMMENT 'sop配置标记(默认0、流水线，1、车间单工位)' AFTER `c_time`,
CHANGE COLUMN `line_id` `line_id` INT(11) NULL DEFAULT NULL COMMENT '产线id/车间id' ,
CHANGE COLUMN `w_id` `w_id` INT(11) NULL DEFAULT NULL COMMENT '工位id/单工位id' ;

# 单工位添加sop是否配置标记字段 zqm 服务器未执行sql
# 2019-07-08
ALTER TABLE `octopus`.`tab_single_work`
ADD COLUMN `sop_sign` INT NULL COMMENT '是否配置SOP标志(0、未配置，1、已配置)' AFTER `parent_id`;
ALTER TABLE `octopus`.`tab_single_work`
CHANGE COLUMN `sop_sign` `sop_sign` INT(11) NULL DEFAULT 0 COMMENT '是否配置SOP标志(0、未配置，1、已配置)' ;
ALTER TABLE `octopus`.`tab_single_work`
ADD COLUMN `im_code` VARCHAR(125) NULL COMMENT '设备编号' AFTER `im_id`;

# 2019-07-10 zqm 服务器未执行sql 硬件添加配置对象类型流水线或者车间
ALTER TABLE `octopus`.`dev_list`
ADD COLUMN `dev_type` INT NULL COMMENT '硬件配置类型(0、流水线，1、车间)' AFTER `sign`;

# 2019-07-10 zqm 服务器未执行sql 计数器相关数据表添加车间或者流水线标记字段
ALTER TABLE `octopus`.`dev_data_log`
ADD COLUMN `sc_type` INT NULL COMMENT '车间或者流水线标记(0、流水线，1、车间)' AFTER `del_data`;
ALTER TABLE `octopus`.`dev_work_data`
ADD COLUMN `sc_type` INT NULL COMMENT '车间或者流水线标记(0、流水线，1、车间)' AFTER `io_sign`;


#2019-07-03 zsj 服务器未执行sql 产品编码用于区分是否产品、半成品
ALTER TABLE `octopus`.`dev_product_list`
ADD COLUMN `sign` INT NULL DEFAULT 0 COMMENT '标记 0、产品 1、半成品' AFTER `ecn_text`,
ADD COLUMN `unit` VARCHAR(45) NULL COMMENT '单位' AFTER `sign`;

# 2019-07-17 zqm 服务器未执行sql 工单添加暂停开始计数标志
ALTER TABLE `octopus`.`dev_work_order`
ADD COLUMN `pb_sign` INT NULL DEFAULT 0 COMMENT '暂停开始最后一次计数标志(默认值0、需要计数，1、不需要计数)' AFTER `work_price`;


 ###############################平台修改sql#####################################2019-07-13
 #添加用户标记
 ALTER TABLE `octopus`.`sys_user`
 ADD COLUMN `industry` INT NULL DEFAULT 0 COMMENT '所属行业' AFTER `user_department`,
 ADD COLUMN `devType` VARCHAR(45) NULL COMMENT '设备类型' AFTER `industry`,
 ADD COLUMN `devCode` VARCHAR(45) NULL COMMENT '设备号' AFTER `devType`,
 ADD COLUMN `grade` INT NULL DEFAULT 1 COMMENT '用户等级' AFTER `devCode`,
 ADD COLUMN `sign` INT NULL DEFAULT 0 AFTER `grade`;


#物料添加单位
ALTER TABLE `octopus`.`tab_materiel`
ADD COLUMN `unit` VARCHAR(45) NULL COMMENT '物料添加单位' AFTER `create_time`;

#产品/半成品   规格配置
ALTER TABLE `bzytest`.`dev_product_list`
ADD COLUMN `rule_id` INT NULL DEFAULT 0 COMMENT '规格配置' AFTER `unit`;

# 2019-07-25
# ECN逻辑更新 服务器未执行sql
ALTER TABLE `bzytest`.`dev_ecn_log`
ADD COLUMN `ecn_num` INT NULL DEFAULT 3 COMMENT 'ecn更改初始化次数3次' AFTER `create_time`,
ADD COLUMN `ecn_status` INT NULL DEFAULT 0 COMMENT 'ecn状态(0、默认值待提交，1、提交待审核，2、审核待执行，3、执行中，4、执行完毕不显示)' AFTER `ecn_num`;


# 2019-07-26 服务器未执行sql
# 菜单添加app标记字段，标识哪些需要在app端展示
ALTER TABLE `octopus`.`sys_menu`
ADD COLUMN `app_sign` INT NULL DEFAULT 0 COMMENT 'app是否展示标识(0、默认值不展示，1、展示)' AFTER `remark`;

# 2019-07-31
# 工单报废品数量默认为0
ALTER TABLE `bzytest`.`dev_work_order`
CHANGE COLUMN `scrap_num` `scrap_num` INT(11) NULL DEFAULT 0 COMMENT '报废品' ;

# 2019-08-08
# app端展示预览图字段
ALTER TABLE `bzytest`.`dev_page_list`
ADD COLUMN `img_path` VARCHAR(225) NULL COMMENT 'app端预览背景图' AFTER `page_pwd`;


# 2019-08-09
# 添加MES配置规则明细表
CREATE TABLE `bzytest`.`tab_mes_batch_rule_detail` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'MES规则明细id',
  `rule_id` INT NULL COMMENT 'MES规则主表id',
  `d_type` INT NULL DEFAULT 2 COMMENT '配置规则明细类型(1、半成品，2、物料默认值)',
  `d_code` VARCHAR(125) NULL COMMENT '半成品/物料的编码',
  `d_tag` INT NULL DEFAULT 0 COMMENT '用于判断半成品是否已经配置了MES规则(0、默认值未配置，1、已配置)',
  PRIMARY KEY (`id`))
COMMENT = 'MES配置规则明细';

# 2019-08-10
# mes工单配置明细添加标记字段
ALTER TABLE `bzytest`.`tab_mes_batch_detail`
ADD COLUMN `d_tag` INT NULL DEFAULT 0 COMMENT '关联半成品是否配置(默认值0未配置，1已配置)' AFTER `c_time`,
ADD COLUMN `d_type` INT NULL DEFAULT 2 COMMENT 'MES关联类型(默认值2物料，1半成品)' AFTER `d_tag`;
# 添加半成品MES批次记录
CREATE TABLE `bzytest`.`tab_mes_part_log` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '半成品mes批次追踪记录主键id',
  `work_code` VARCHAR(45) NULL COMMENT '对应工单编号',
  `mes_code` VARCHAR(65) NULL COMMENT '对应的主码编号',
  `part_code` VARCHAR(65) NULL COMMENT '半成品编码',
  `materiel_code` VARCHAR(65) NULL COMMENT '关联编码',
  `batch_code` VARCHAR(125) NULL COMMENT '批次信息',
  `c_time` DATETIME NULL COMMENT '创建时间',
  PRIMARY KEY (`id`))
COMMENT = '半成品mes批次追踪记录';

# mes规则排序
# 2019-08-16
ALTER TABLE `bzytest`.`tab_mes_batch_rule_detail`
ADD COLUMN `rule_order` INT NULL COMMENT '规则排序(1优先级别最高，越大优先级别越低)' AFTER `d_tag`;

# mes数据明细添加数量
# 2019-08-19
ALTER TABLE `bzytest`.`tab_mes_batch_detail`
ADD COLUMN `mes_number` INT NULL COMMENT 'mes批次数量' AFTER `d_type`;
ALTER TABLE `bzytest`.`tab_mes_batch_detail`
ADD COLUMN `rule_order` INT NULL COMMENT 'mes数据规则排序(1优先级别最高，越大优先级别越低)' AFTER `mes_number`;
ALTER TABLE `bzytest`.`tab_mes_batch_detail`
ADD COLUMN `pro_batch_code` VARCHAR(45) NULL COMMENT '生产MES批次信息' AFTER `batch_code`;
ALTER TABLE `bzytest`.`tab_mes_batch`
ADD COLUMN `mes_sign` VARCHAR(45) NULL DEFAULT '000000000000' COMMENT 'mes标记扫描字段(1-12优先级别递增)、0代表生产未扫描，1，代表生产已扫描' AFTER `u_time`;









